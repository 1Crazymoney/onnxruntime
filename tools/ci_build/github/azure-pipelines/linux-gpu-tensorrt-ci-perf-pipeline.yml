jobs:
- job: Linux_CI_GPU_TENSORRT_PERF
  pool: Linux-GPU-TensorRT-Perf 
  variables:
    ALLOW_RELEASED_ONNX_OPSET_ONLY: '1'
    image: 'onnxruntime-trt-perf-722'
  timeoutInMinutes: 1200 
  steps:
    #- template: templates/set-test-data-variables-step.yml
    #

    # - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/build_images.sh -o $(Build.SourcesDirectory)/dockerfiles/Dockerfiles.tensorrt -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/Dockerfile.tensorrt-perf' -b master -i onnxruntime-trt-perf
    #   displayName: 'Build latest ORT Images'
    #   workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'

    - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf_docker.sh -d $(image) -o "onnx-zoo-models"'
      displayName: 'Onnx Zoo Models Perf'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    # - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf_docker.sh -d IMAGE_NAME -o "many-models"'
    #   displayName: 'Many Models Perf'
    #   workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    # - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf_docker.sh -d IMAGE_NAME -o "partner-models"'
    #   displayName: 'Partner Models Perf'
    #   workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - script: 'mkdir $(Build.SourcesDirectory)/Artifact && cp -r /home/hcsuser/perf/result/ $(Build.SourcesDirectory)/Artifact' 
      displayName: 'Prepare Artifacts'
      workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.SourcesDirectory)/Artifact'
        artifactName: 'result'

    - template: templates/clean-agent-build-directory-step.yml